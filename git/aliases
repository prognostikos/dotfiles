alias ga='git add '
alias gaa='git add --update'
alias gA='git add --all'
alias gap='git add --patch --all'
alias gb='git branch '
alias gc='git commit -v '
alias gd='git diff '
alias gdc='git diff --cached '
alias gcb='git checkout -b'
alias gco='git checkout '
alias gl="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --since='7 days ago'"
alias gll="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%aD) %C(bold blue)<%an>%Creset' --abbrev-commit "
alias got='git '
alias get='git '
alias gcm='git commit -m '
alias gp='git push '
alias ged='git edit'
alias gpf='git push --force-with-lease --force-if-includes'

gfx() {
  local default_branch
  default_branch=$(git symbolic-ref refs/remotes/origin/HEAD 2>/dev/null | sed 's@^refs/remotes/origin/@@')
  if [ -z "$default_branch" ]; then
    if git show-ref --verify --quiet refs/heads/main; then
      default_branch="main"
    else
      default_branch="master"
    fi
  fi
  local commit_hash
  commit_hash=$(git log $(git merge-base "$default_branch" HEAD)..HEAD --oneline | fzf | cut -d" " -f1)
  if [ -n "$commit_hash" ]; then
    git commit --fixup "$commit_hash"
  fi
}

gnm() {
  local default_branch
  default_branch=$(git symbolic-ref refs/remotes/origin/HEAD 2>/dev/null | sed 's@^refs/remotes/origin/@@')
  if [ -z "$default_branch" ]; then
    if git show-ref --verify --quiet refs/heads/main; then
      default_branch="main"
    else
      default_branch="master"
    fi
  fi
  git branch --no-merged "$default_branch"
}
